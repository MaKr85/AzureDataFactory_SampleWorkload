{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dp-datafactory-mkr-tst"
		},
		"DWH_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DWH'"
		},
		"external_sql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'external_sql'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/source_getFiles02a_processed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dpstoragetstmkr",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Load DWH/source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": "02a-processed"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_stockdataCleansedFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dpstoragetstmkr",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "stockdata/02a-processed/source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "stockdata",
						"fileSystem": "02-cleansed"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_stockdataFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dpstoragetstmkr",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stockdata/01-raw/source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "Stocks.zip",
						"fileSystem": "98-temporary"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_stockdataZip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "stockdata/01-raw/source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": "Stocks.zip"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_stockdata_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dpstoragetstmkr",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "stockdata/01-raw/source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Stocks.zip",
						"fileSystem": "98-temporary"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_stockdatacleansed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dpstoragetstmkr",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stockdata/02a-processed/source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "stockdata",
						"fileSystem": "02-cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DWH_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "dp_keyvault_all",
							"type": "LinkedServiceReference"
						},
						"secretName": "areto-msbi-admin"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/external_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('external_sql_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "dp_keyvault_all",
							"type": "LinkedServiceReference"
						},
						"secretName": "areto-msbi-admin"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Iterate CSV Cleansing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Directories",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_csvCleansing_directories",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DoCleansing ForEach Directory",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Directories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Directories').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute DoCSVCleansing",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DoCSVCleansing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"source": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "02-cleansed"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T06:43:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load exchangerates API to 01-raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get exchangerates",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['currency']"
										},
										"sink": {
											"name": "currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rate']"
										},
										"sink": {
											"name": "rate",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"name": "date",
											"type": "DateTime"
										}
									}
								],
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "source_exchangerates_API",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sink_exchangerates_01raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "01-raw"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-23T10:52:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load stockdata to 01-raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip2temporary",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "source_stockdataZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sink_tmp_stockdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get all stockdata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Unzip2temporary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_stockdata_files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach stockdataFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get all stockdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get all stockdata').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from tmp 2 01-raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_stockdataFile",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_stockdata",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@replace(item().name,'.txt','.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Delete from tmp",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "ForEach stockdataFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_stockdata_files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "01-raw"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T06:43:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_stockdataZip')]",
				"[concat(variables('factoryId'), '/datasets/source_stockdata_files')]",
				"[concat(variables('factoryId'), '/datasets/source_stockdataFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Merge stockdata 02a-processed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get all stockdata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_stockdataCleansedFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach stockdataFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get all stockdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get all stockdata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Merge Stockdata",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Source",
													"value": {
														"value": "@replace(item().name,'_cleansed.csv','')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_stockdatacleansed",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_MergedStockdata",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "02a-processed"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T07:21:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_stockdataCleansedFiles')]",
				"[concat(variables('factoryId'), '/datasets/source_stockdatacleansed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_DWH_Stage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Load DWH/sink"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_DWH_tmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Load DWH/sink"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "tmp",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_SQLTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "external_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "external-sql/source"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/external_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02 Load Files from directory 02-cleansed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files in 02-cleansed",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_getFiles02_cleansed",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files in 02-cleansed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files in 02-cleansed').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy2DWH_STAGE",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CREATE TABLE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_02cleansed",
											"type": "DatasetReference",
											"parameters": {
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_DWH_Stage",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@replace(item().name,'_cleansed.csv','')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Get PreSQLScript",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "source_PreSQLScript",
											"type": "DatasetReference",
											"parameters": {
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@replace(item().name,'_cleansed.csv','_SQL.txt')",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "CREATE TABLE",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get PreSQLScript",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[stage].[spExecuteSQLCmd]",
										"storedProcedureParameters": {
											"SqlJSON": {
												"value": {
													"value": "@{activity('Get PreSQLScript').output.value}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "03-DWH/Initial Load/02-cleansed"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T07:20:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sink_DWH_Stage')]",
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02 Load Files from directory 02-cleansed_Inc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files in 02-cleansed",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_getFiles02_cleansed",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files in 02-cleansed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files in 02-cleansed').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "MERGE DATA",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy to tmp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[stage].[spMergeData]",
										"storedProcedureParameters": {
											"Debug": {
												"value": null,
												"type": "String"
											},
											"SrcDatabase": {
												"value": "DWH",
												"type": "String"
											},
											"SrcSchema": {
												"value": "tmp",
												"type": "String"
											},
											"SrcTable": {
												"value": {
													"value": "@replace(item().name,'_cleansed.csv','')",
													"type": "Expression"
												},
												"type": "String"
											},
											"TgtDatabase": {
												"value": "DWH",
												"type": "String"
											},
											"TgtSchema": {
												"value": "stage",
												"type": "String"
											},
											"TgtTable": {
												"value": {
													"value": "@replace(item().name,'_cleansed.csv','')",
													"type": "Expression"
												},
												"type": "String"
											},
											"WhereClause": {
												"value": null,
												"type": "String"
											},
											"DropSrcTable": {
												"value": "Y",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DWH",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy to tmp",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_02cleansed",
											"type": "DatasetReference",
											"parameters": {
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_DWH_tmp",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@replace(item().name,'_cleansed.csv','')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "03-DWH/Incremental Load/02-cleansed"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T07:20:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]",
				"[concat(variables('factoryId'), '/datasets/sink_DWH_tmp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02 Load Files from directory 02a-processed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files in 02-processed",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "source_getFiles02a_processed",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files in 02-processed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files in 02-processed').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@replace(item().name,'.csv','')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "MergedStockdata",
												"activities": [
													{
														"name": "Copy Stockdata",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"additionalColumns": [
																	{
																		"name": "InsertDate",
																		"value": {
																			"value": "@utcnow()",
																			"type": "Expression"
																		}
																	}
																],
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "AzureSqlSink",
																"tableOption": "autoCreate",
																"disableMetricsCollection": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "sink_MergedStockdata",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "sink_DWH_Stage",
																"type": "DatasetReference",
																"parameters": {
																	"TableName": "stockdata"
																}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"parameters": {
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "03-DWH/Initial Load/02a-processed"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T06:45:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_getFiles02a_processed')]",
				"[concat(variables('factoryId'), '/datasets/sink_DWH_Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load externalSQL to 01-raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get external-sql_Tables2Load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "metadata_external_sql_Tables2Load",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table2Load",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get external-sql_Tables2Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get external-sql_Tables2Load').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFromSQL2DataLake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_SQLTable",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_01_raw_external_sql",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().SchemaName,'_',item().TableName,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "01-raw"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T06:43:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_SQLTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Load_02-cleansed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute - CSV Cleansing",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Iterate CSV Cleansing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "00-Master/02-Submaster"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-23T10:30:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Iterate CSV Cleansing')]"
			]
		}
	]
}